#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.6){
z = y
if(y != 0.6 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, col = "red", pch=19, cex = z)
}
mobilitymap(param_sna_Intro)
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.6){
z = y
if(y != 0.6 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, col = "green", pch=19, cex = z)
}
mobilitymap(param_sna_Intro)
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.6){
z = y
if(y != 0.6 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, col="black", bg="darkgreen" pch=21, cex = z)
}
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.6){
z = y
if(y != 0.6 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, col="black", bg="darkgreen", pch=21, cex = z)
}
mobilitymap(param_sna_Intro)
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.6){
z = y
if(y != 0.6 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
}
mobilitymap(param_sna_Intro)
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.8){
z = y
if(y != 0.8 & y %in% names(x))
z <- x[,y]/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
}
mobilitymap(param_sna_Intro)
library(Animalmobility)
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
library("Animalmobility")
mon_pays <- "TUNISIE" # Inscrivez le nom de votre pays entre guillemets, en majuscule et sans accent.
df <- impcheckdata()
Reseau_Intro <- mobinternat(df, mon_pays)
Reseau_Expo <- mobnation(df, mon_pays)
# Etude de la mobilité internationale
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
# Etude de la mobilité nationale
param_sna_Expo <- paramSNA(Reseau_Expo, df, mon_pays)
graphSNA(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "betweeness")
mobilitymap(param_sna_Expo)
#' mobilitymap
#'
#' Cette fonction sert à produire une carte
#'
#' @import rworldmap
#' @importFrom graphics points
#' @export mobilitymap
#' @param x à définir
#' @param y à définir
#' @keywords plot ggplot sna réseau
mobilitymap <- function(x, y = 0.8){
z = y
if(y != 0.8 & y %in% names(x))
z <- (x[,y]*2)/max(x[,y])
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
}
mobilitymap(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "betweeness")
param_sna_Expo
param_sna_Expo[param_sna_Expo$degree != 0,]
library(Animalmobility)
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
library("Animalmobility")
mon_pays <- "TUNISIE" # Inscrivez le nom de votre pays entre guillemets, en majuscule et sans accent.
df <- raxdata
df <- rawdata
Reseau_Intro <- mobinternat(df, mon_pays)
Reseau_Expo <- mobnation(df, mon_pays)
# Etude de la mobilité internationale
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
# Etude de la mobilité nationale
param_sna_Expo <- paramSNA(Reseau_Expo, df, mon_pays)
graphSNA(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "degree")
remove.packages("plotly", lib="~/R/win-library/3.5")
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
install.packages(c("igraph", "ggplot2", "plotly"))
install.packages(c("igraph", "ggplot2", "plotly"))
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
install.packages(c("igraph", "ggplot2", "plotly"))
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
install.packages("Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
impcheckdata
# Inscrivez le nom de votre pays entre guillemets, en majuscule et sans accent.
mon_pays <- "TUNISIE"
head(rawdata)
library("Animalmobility", lib.loc="~/R/win-library/3.5")
names(rawdata)
library(Animalmobility)
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
library("Animalmobility")
df <- impcheckdata()
df <- impcheckdata()
head(df)
df <- impcheckdata()
df <- impcheckdata()
head(df)
#'
#' @import ggplot2
#' @importFrom plotly ggplotly
#' @export graphSNA
#' @param x data.frame contenant les noms des localités, les paramètres de mobilité et les coordonnées GPS
#' @param y à définir
#' @param outdegree à définir
#' @param betweeness à définir
#' @param NOM à définir
#' @keywords plot ggplot sna réseau
graphSNA <- function(x, y = indegree, z = outdegree, size = betweeness, label = NOM){
x <- x[x$degree != 0,]
message("Placez votre curseur sur les points pour voir \xe0 quelle localisation ils correspondent.")
ggplotly(
ggplot(x, aes(y, z,label = label)) +
geom_point(aes(size = size)) +
xlab("Degre entrant") +
ylab("Degre sortant") +
scale_size_continuous(name = "Centralite d'intermediarite") +
ggtitle("Localites du reseau de mobilite animale representees\nen fonction de leur degre entrant et de leur degre sortant") +
theme(plot.title = element_text(hjust = 0.5)))
}
Reseau_Intro <- mobinternat(rawdata, mon_pays)
Reseau_Intro <- mobinternat(rawdata, "TUNISIE")
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, rawdata, "TUNISIE")
graphSNA(param_sna_Intro)
#'
#' @import ggplot2
#' @importFrom plotly ggplotly
#' @export graphSNA
#' @param x data.frame contenant les noms des localités, les paramètres de mobilité et les coordonnées GPS
#' @param y à définir
#' @param outdegree à définir
#' @param betweeness à définir
#' @param NOM à définir
#' @keywords plot ggplot sna réseau
graphSNA <- function(x, y = indegree, z = outdegree, sizedots = betweeness, labeldots = NOM){
x <- x[x$degree != 0,]
message("Placez votre curseur sur les points pour voir \xe0 quelle localisation ils correspondent.")
ggplotly(
ggplot(x, aes(y, z,label = labeldots)) +
geom_point(aes(size = sizedots)) +
xlab("Degre entrant") +
ylab("Degre sortant") +
scale_size_continuous(name = "Centralite d'intermediarite") +
ggtitle("Localites du reseau de mobilite animale representees\nen fonction de leur degre entrant et de leur degre sortant") +
theme(plot.title = element_text(hjust = 0.5)))
}
graphSNA(param_sna_Intro)
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
graphSNA(param_sna_Intro)
graphSNA
library("plotly", lib.loc="~/R/win-library/3.5")
graphSNA(param_sna_Intro)
param_sna_Intro
x <- x[x$degree != 0,]
x <- param_sna_Intro
x <- x[x$degree != 0,]
message("Placez votre curseur sur les points pour voir \xe0 quelle localisation ils correspondent.")
y
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
library("Animalmobility")
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
mon_pays <- "TUNISIE"
df <- rawdata
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
param_sna_Intro
head(param_sna_Intro)
#'
#' @import ggplot2
#' @importFrom plotly ggplotly
#' @export graphSNA
#' @param x data.frame contenant les noms des localités, les paramètres de mobilité et les coordonnées GPS
#' @param indegree à définir
#' @param outdegree à définir
#' @param betweeness à définir
#' @param NOM à définir
#' @keywords plot ggplot sna réseau
graphSNA <- function(x, indegree, outdegree, betweeness, NOM){
x <- x[x$degree != 0,]
message("Placez votre curseur sur les points pour voir \xe0 quelle localisation ils correspondent.")
ggplotly(
ggplot(x, aes(indegree, outdegree,label=NOM)) +
geom_point(aes(size = betweeness)) +
xlab("Degre entrant") +
ylab("Degre sortant") +
scale_size_continuous(name = "Centralite d'intermediarite") +
ggtitle("Localites du reseau de mobilite animale representees\nen fonction de leur degre entrant et de leur degre sortant") +
theme(plot.title = element_text(hjust = 0.5)))
}
graphSNA(param_sna_Intro)
df <- impcheckdata()
df <- impcheckdata()
library(Animalmobility)
rawdata
head(rawdata)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library("Animalmobility", lib.loc="~/R/win-library/3.5")
df <- impcheckdata()
df <- impcheckdata()
df <- impcheckdata()
df <- impcheckdata()
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
library(Animalmobility)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = TRUE
)
library("Animalmobility")
df <- rawdata
mon_pays <- "TUNISIE"
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
mon_pays <- "TUNISIE"
###############################################
##         Analyse de la mobilite            ##
###############################################
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
mobilitymap
x <- param_sna_Intro
y = 0.8
z = y
if(y != 0.8 & y %in% names(x))
z <- (x[,y]*2)/max(x[,y])
x <- x[x$degree != 0,]
newmap <- getMap(resolution = "low")
library("rworldmap")
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
z = y
if(y != 0.8 & y %in% names(x))
z <- (x[,y]*2)/max(x[,y])
x <- x[x$degree != 0,]
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
mon_pays <- "TUNISIE"
###############################################
##         Analyse de la mobilite            ##
###############################################
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
# Etude de la mobilité nationale
Reseau_Expo <- mobnation(df, mon_pays)
param_sna_Expo <- paramSNA(Reseau_Expo, df, mon_pays)
graphSNA(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "degree")
mon_pays <- "TUNISIE"
###############################################
##         Analyse de la mobilite            ##
###############################################
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
# Etude de la mobilité nationale
Reseau_Expo <- mobnation(df, mon_pays)
param_sna_Expo <- paramSNA(Reseau_Expo, df, mon_pays)
graphSNA(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "degree")
library(Animalmobility)
library(Animalmobility)
mon_pays <- "TUNISIE"
###############################################
##         Analyse de la mobilite            ##
###############################################
# Etude de la mobilité internationale
Reseau_Intro <- mobinternat(df, mon_pays)
param_sna_Intro <- paramSNA(Reseau_Intro, df, mon_pays)
graphSNA(param_sna_Intro)
mobilitymap(param_sna_Intro, y = "indegree")
# Etude de la mobilité nationale
Reseau_Expo <- mobnation(df, mon_pays)
param_sna_Expo <- paramSNA(Reseau_Expo, df, mon_pays)
graphSNA(param_sna_Expo)
mobilitymap(param_sna_Expo, y = "degree")
z = y
if(y != 0.8 & y %in% names(x))
z <- (x[,y]*2)/max(x[,y])
x <- x[x$degree != 0,]
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
param_sna_Expo
x <- param_sna_Expo
z = y
if(y != 0.8 & y %in% names(x))
z <- (x[,y]*2)/max(x[,y])
x <- x[x$degree != 0,]
newmap <- getMap(resolution = "low")
plot(newmap,
xlim = c(min(x$LONGITUDE_X) - 1, max(x$LONGITUDE_X) + 1),
ylim = c(min(x$LATITUDE_Y) - 1, max(x$LATITUDE_Y) + 1),
asp = 1)
points(x$LONGITUDE_X, x$LATITUDE_Y, bg="darkgreen", pch=19, cex = z)
remove.packages("Animalmobility", lib="~/R/win-library/3.5")
install.packages("D:/2- Boulot/2- AQCR/0- AQCR/1- Outils/Animalmobility_0.0.0.1.tar.gz", repos = NULL, type = "source")
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
library(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap","Animalmobility"))
library("graphics", "igraph", "ggplot2", "plotly", "rworldmap","Animalmobility")
library("graphics","igraph", "ggplot2", "plotly", "rworldmap","Animalmobility")
library("graphics";"igraph";"ggplot2";"plotly";"rworldmap";"Animalmobility")
library("graphics","igraph")
library("graphics","igraph","ggplot2","plotly","rworldmap","Animalmobility")
library("graphics","igraph","ggplot2","plotly")
library("graphics","igraph","ggplot2","plotly","rworldmap")
library('rworldmap')
library("rworldmap")
library("graphics","igraph","ggplot2","plotly","rworldmap","Animalmobility")
library("graphics","igraph","ggplot2","plotly","rworldmap")
library("rworldmap")
df <- rawdata
library("graphics","igraph","ggplot2","plotly","Animalmobility")
library("Animalmobility")
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
library("Animalmobility")
library("graphics","igraph","ggplot2","plotly")
library("Animalmobility")
library("rworldmap")
require("rworldmap")
require('rworldma')
require('rworldmap')
library("rworldmap", lib.loc="~/R/win-library/3.5")
library("rworldmap")
detach("package:rworldmap", unload=TRUE)
library("rworldmap")
library("Animalmobility", lib.loc="C:/Program Files/R/R-3.5.2/library")
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
install.packages(c("graphics", "igraph", "ggplot2", "plotly", "rworldmap"))
library("graphics","igraph","ggplot2","plotly")
library("Animalmobility")
library("rworldmap")
df <- dataraw
df <- rawdata
library("Animalmobility")
# installer le Package Animalmobility en selectionnant le fichier Animalmobility_0.0.0.1.tar.gz
install.packages(file.choose(), repos = NULL, type = "source")
library("graphics","igraph","ggplot2","plotly")
library("Animalmobility")
library("rworldmap")
library("Animalmobility", lib.loc="~/R/win-library/3.5")
library("rworldmap", lib.loc="~/R/win-library/3.5")
library("igraph", lib.loc="~/R/win-library/3.5")
library(Animalmobility)
